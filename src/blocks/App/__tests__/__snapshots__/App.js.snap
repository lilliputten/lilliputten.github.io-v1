// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App match snapshot 1`] = `
<Connect(App)
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <App
    dispatch={[Function]}
    page="default"
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
  >
    <div
      className="App App_page_default"
      style={Object {}}
    >
      <App-Header>
        <header
          className="App-Header"
          style={Object {}}
        >
          <Bem
            alt="logo"
            elem="Logo"
            src="App-Logo.svg"
            tag="img"
          >
            <img
              alt="logo"
              className="App-Logo"
              src="App-Logo.svg"
            />
          </Bem>
          <Bem
            elem="Title"
            tag="h1"
          >
            <h1
              className="App-Title"
            >
              Welcome to React
            </h1>
          </Bem>
        </header>
      </App-Header>
      <Connect(View)
        clickHandle={true}
        hashChange={true}
        loadPage={true}
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <View
          clickHandle={true}
          dispatch={[Function]}
          hashChange={true}
          loadPage={true}
          page="default"
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
          storeSubscription={
            Subscription {
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "unsubscribe": [Function],
            }
          }
        >
          <div
            className="View View_mode_default"
            style={Object {}}
          >
            <View-ContentWrapper>
              <div
                className="View-ContentWrapper"
                style={Object {}}
              >
                Root content 
                <a
                  href="#!test/test"
                >
                  test
                </a>
              </div>
            </View-ContentWrapper>
          </div>
        </View>
      </Connect(View)>
    </div>
  </App>
</Connect(App)>
`;
