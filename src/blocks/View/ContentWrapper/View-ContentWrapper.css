// vim: ft=stylus

// {{{ DEBUG

@import './variables.css';

$localVarColor: magenta;

:root {
  --rootColor: pink; // Define variable in root scope
}

:View {
  --localColor: #00ff00; // Define variable in specified scope
}

// }}} DEBUG

.View {
  &-ContentWrapper {

    // width: 100%;
    padding: 15px;

    // {{{ DEBUG
    // @media (--testViewport) {
    //   color: green;
    //   color: $localVarColor; // magenta
    //   color: $(rootColor); // pink
    //   color: $(localColor); // green
    //   color: $(testGlobalColor); // orange
    //   color: $(includedColor); // red
    //   color: color-mod( $(testGlobalColor) blend(black 20%) ); // @see https://github.com/jonathantneal/postcss-color-mod-function
    //   color: color-mod( $(testGlobalColor) alpha(50%) ); // @see https://github.com/jonathantneal/postcss-color-mod-function
    //   opacity: .5;
    // }
    // }}}

    // Content elements...

    h6,
    h5,
    h4,
    h3,
    h2,
    h1 {
      @mixin titleFont;
      font-size: 20px;
      margin: 0;
    }
    h1 {
      font-size: 36px;
      .title-inset {
        position: relative;
        z-index: 5;
        &:before,
        &:after {
          background: $pageBgColor;
          content: attr(data-text);
          // clip: rect(0, 900px, 0, 0);
          opacity: 0.2;
          overflow: hidden;
          position: absolute;
          top: 0;
        }
        &:before {
            animation: title-inset-anim-2 3s infinite linear alternate-reverse;
            left: -2px;
            text-shadow: 1px 0 $defaultTextColor;
        }
        &:after {
          animation: title-inset-anim-1 2s infinite linear alternate-reverse;
          left: 2px;
          text-shadow: -1px 0 $primaryColor;
        }
      }
    }
    h2 {
      font-size: 28px;
    }

    .gallery {
      display: block;
      font-size: 0; // Remove spacings
    }

    .IconsList {
      list-style-type: none;
      padding-left: 0;
      li {
        position: relative;
        padding: 2px 0;
        padding-left: 40px;
        .fa {
          position: absolute;
          left: 10px;
          top: 5px;
          color: $primaryColor;
          font-size: $(fontSizeLg)px;
        }
      }
    }

  }
}

$gapHorizontal: 0px;

/*{{{*/@keyframes title-inset-anim-1 {
  0% {
    opacity: 1;
    transform: translate3d($gapHorizontal, 0, 0);
    clip-path: polygon(0 2%, 100% 2%, 100% 5%, 0 5%);
  }

  2% {
    clip-path: polygon(0 15%, 100% 15%, 100% 15%, 0 15%);
  }

  4% {
    clip-path: polygon(0 10%, 100% 10%, 100% 20%, 0 20%);
  }

  6% {
    clip-path: polygon(0 1%, 100% 1%, 100% 2%, 0 2%);
  }

  8% {
    clip-path: polygon(0 33%, 100% 33%, 100% 33%, 0 33%);
  }

  10% {
    clip-path: polygon(0 44%, 100% 44%, 100% 44%, 0 44%);
  }

  12% {
    clip-path: polygon(0 50%, 100% 50%, 100% 20%, 0 20%);
  }

  14% {
    clip-path: polygon(0 70%, 100% 70%, 100% 70%, 0 70%);
  }

  16% {
    clip-path: polygon(0 80%, 100% 80%, 100% 80%, 0 80%);
  }

  18% {
    clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%);
  }

  20% {
    clip-path: polygon(0 70%, 100% 70%, 100% 80%, 0 80%);
  }

  21.9% {
    opacity: 1;
    transform: translate3d($gapHorizontal, 0, 0);
  }

  22%, 100% {
    opacity: 0;
    transform: translate3d(0, 0, 0);
    clip-path: polygon(0 0, 0 0, 0 0, 0 0);
  }
}/*}}}*/

/*{{{*/@keyframes title-inset-anim-2 {
  0% {
    opacity: 1;
    transform: translate3d(calc(-1 * $gapHorizontal), 0, 0);
    clip-path: polygon(0 25%, 100% 25%, 100% 30%, 0 30%);
  }

  3% {
    clip-path: polygon(0 3%, 100% 3%, 100% 3%, 0 3%);
  }

  5% {
    clip-path: polygon(0 5%, 100% 5%, 100% 20%, 0 20%);
  }

  7% {
    clip-path: polygon(0 20%, 100% 20%, 100% 20%, 0 20%);
  }

  9% {
    clip-path: polygon(0 40%, 100% 40%, 100% 40%, 0 40%);
  }

  11% {
    clip-path: polygon(0 52%, 100% 52%, 100% 59%, 0 59%);
  }

  13% {
    clip-path: polygon(0 60%, 100% 60%, 100% 60%, 0 60%);
  }

  15% {
    clip-path: polygon(0 75%, 100% 75%, 100% 75%, 0 75%);
  }

  17% {
    clip-path: polygon(0 65%, 100% 65%, 100% 40%, 0 40%);
  }

  19% {
    clip-path: polygon(0 45%, 100% 45%, 100% 50%, 0 50%);
  }

  20% {
    clip-path: polygon(0 14%, 100% 14%, 100% 33%, 0 33%);
  }

  21.9% {
    opacity: 1;
    transform: translate3d(calc(-1 * $gapHorizontal), 0, 0);
  }

  22%, 100% {
    opacity: 0;
    transform: translate3d(0, 0, 0);
    clip-path: polygon(0 0, 0 0, 0 0, 0 0);
  }
}/*}}}*/


// @keyframes noise-anim-1 {
//   0%
//       clip: rect(random(100) + px, 9999px, random(100) + px, 0);
//   $steps: 20;
//   @for $i from 0 to 20 {
//     calc($i * 1 / $steps) {
//       // clip: rect(random(100) + px, 9999px, random(100) + px, 0);
//     }
//   }
// }

